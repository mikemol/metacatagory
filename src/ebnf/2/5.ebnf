MetaDirectiveAnalysis ::= "(" "For each of: CHAPTER 5: 'Accessible categories', extend the constructed grammar to integrate the formalized content of the section." ")" "==>" {

MetaDirectiveAnalysis ::= "(" "Elaborate on Section 5.2: Locally presentable categories" ")" "==>" {
(*
ELABORATION: This section defines the main class of 'well-behaved' categories studied in this theory: the
locally λ-presentable categories. These are categories that are entirely 'built from' a set of λ-presentable
building blocks using colimits. This property is shown to have extremely powerful structural consequences,
making these categories a foundational setting for modern algebra and category theory.
*)

(* ========================================================================================================== )
( == Part 1: The Master Definition == )
( ========================================================================================================== *)

LocallyPresentableCategory ::= "LOCALLY" RegularCardinal "-PRESENTABLE_CATEGORY" ;
TYPING
(*
* The formal definition of a locally λ-presentable category C requires two conditions:
* 1. C is cocomplete (it has all the 'glue' needed to build things).
* 2. There exists a small set S of λ-presentable objects which generates the entire category
* under colimits. That is, every object in C can be written as a colimit of objects from S.
*)
Γ ⊢ C : Category, Γ ⊢ λ : REGULAR_CARDINAL
Premise1: C is COCOMPLETE
Premise2: ∃ S ⊆ Ob(C) s.t. (S is a SET) ∧ (∀ A∈S, A is λ-PRESENTABLE) ∧ (S generates C under colimits)
----------------------------------------------------------------------------------------------------------
Γ ⊢ C is LOCALLY λ-PRESENTABLE_CATEGORY ;
CATEGORY
[[ LOCALLY λ-PRESENTABLE_CATEGORY ]] = "A very well-behaved category that is 'algebraic in nature' at the scale of λ. It is guaranteed to be built from a small set of 'compact' objects of size λ. Categories of models for algebraic theories (like Grp, R-Mod) are the canonical examples of locally finitely (i.e., ℵ₀-) presentable categories." ;

(* ========================================================================================================== )
( == Part 2: The Powerful Structural Consequences == )
( ========================================================================================================== *)

TheoremDeclaration ::= "THEOREM" "LocallyPresentableImpliesComplete" ":"
"Every LOCALLY_PRESENTABLE_CATEGORY is also a COMPLETE category." ;
TYPING
(Γ ⊢ C is LOCALLY_PRESENTABLE_CATEGORY) ==> (Γ ⊢ C is COMPLETE_CATEGORY)
--------------------------------------------------------------------------
Γ ⊢ THEOREM ... : MetaTheorem ;
CATEGORY
[[ THEOREM LocallyPresentableImpliesComplete ]] = "A powerful structural guarantee. The assumption of being built from small objects via colimits (cocompleteness) is strong enough to force the existence of all limits as well. This is a form of the Adjoint Functor Theorem, and it shows the deep symmetry inherent in these categories." ;

TheoremDeclaration ::= "THEOREM" "LocallyPresentableAreWellBehaved" ":"
"Every LOCALLY_PRESENTABLE_CATEGORY is well-powered, well-copowered, and has a (StrongEpi, Mono) factorization system." ;
TYPING
(Γ ⊢ C is LOCALLY_PRESENTABLE_CATEGORY) ==> (Γ ⊢ C is WELL-POWERED ∧ C is WELL-COPOWERED ∧ C has StrongEpiMonoFactorization)
----------------------------------------------------------------------------------------------------------------------------
Γ ⊢ THEOREM ... : MetaTheorem ;
CATEGORY
[[ THEOREM LocallyPresentableAreWellBehaved ]] = "An assertion that locally presentable categories possess all the standard 'niceness' properties expected of an algebraic category. They have well-behaved subobject and quotient lattices, and a canonical image factorization system." ;
}

MetaDirectiveAnalysis ::= "(" "Elaborate on Section 5.2: Locally presentable categories" ")" "==>" {
(*
ELABORATION: This section defines the main class of 'well-behaved' categories studied in this theory: the
locally λ-presentable categories. These are categories that are entirely 'built from' a set of λ-presentable
building blocks using colimits. This property is shown to have extremely powerful structural consequences,
making these categories a foundational setting for modern algebra and category theory.
*)

(* ========================================================================================================== )
( == Part 1: The Master Definition == )
( ========================================================================================================== *)

LocallyPresentableCategory ::= "LOCALLY" RegularCardinal "-PRESENTABLE_CATEGORY" ;
TYPING
(*
* The formal definition of a locally λ-presentable category C requires two conditions:
* 1. C is cocomplete (it has all the 'glue' needed to build things).
* 2. There exists a small set S of λ-presentable objects which generates the entire category
* under colimits. That is, every object in C can be written as a colimit of objects from S.
*)
Γ ⊢ C : Category, Γ ⊢ λ : REGULAR_CARDINAL
Premise1: C is COCOMPLETE
Premise2: ∃ S ⊆ Ob(C) s.t. (S is a SET) ∧ (∀ A∈S, A is λ-PRESENTABLE) ∧ (S generates C under colimits)
----------------------------------------------------------------------------------------------------------
Γ ⊢ C is LOCALLY λ-PRESENTABLE_CATEGORY ;
CATEGORY
[[ LOCALLY λ-PRESENTABLE_CATEGORY ]] = "A very well-behaved category that is 'algebraic in nature' at the scale of λ. It is guaranteed to be built from a small set of 'compact' objects of size λ. Categories of models for algebraic theories (like Grp, R-Mod) are the canonical examples of locally finitely (i.e., ℵ₀-) presentable categories." ;

(* ========================================================================================================== )
( == Part 2: The Powerful Structural Consequences == )
( ========================================================================================================== *)

TheoremDeclaration ::= "THEOREM" "LocallyPresentableImpliesComplete" ":"
"Every LOCALLY_PRESENTABLE_CATEGORY is also a COMPLETE category." ;
TYPING
(Γ ⊢ C is LOCALLY_PRESENTABLE_CATEGORY) ==> (Γ ⊢ C is COMPLETE_CATEGORY)
--------------------------------------------------------------------------
Γ ⊢ THEOREM ... : MetaTheorem ;
CATEGORY
[[ THEOREM LocallyPresentableImpliesComplete ]] = "A powerful structural guarantee. The assumption of being built from small objects via colimits (cocompleteness) is strong enough to force the existence of all limits as well. This is a form of the Adjoint Functor Theorem, and it shows the deep symmetry inherent in these categories." ;

TheoremDeclaration ::= "THEOREM" "LocallyPresentableAreWellBehaved" ":"
"Every LOCALLY_PRESENTABLE_CATEGORY is well-powered, well-copowered, and has a (StrongEpi, Mono) factorization system." ;
TYPING
(Γ ⊢ C is LOCALLY_PRESENTABLE_CATEGORY) ==> (Γ ⊢ C is WELL-POWERED ∧ C is WELL-COPOWERED ∧ C has StrongEpiMonoFactorization)
----------------------------------------------------------------------------------------------------------------------------
Γ ⊢ THEOREM ... : MetaTheorem ;
CATEGORY
[[ THEOREM LocallyPresentableAreWellBehaved ]] = "An assertion that locally presentable categories possess all the standard 'niceness' properties expected of an algebraic category. They have well-behaved subobject and quotient lattices, and a canonical image factorization system." ;
}

MetaDirectiveAnalysis ::= "(" "Elaborate on Section 5.3: Accessible categories" ")" "==>" {
(*
ELABORATION: This section introduces a significant weakening of the concept of a locally presentable
category. An "accessible" category still relies on a set of λ-presentable building blocks, but it is not
required to be cocomplete. Instead, it is only required to have the specific colimits—the λ-filtered
ones—that are necessary to test for λ-presentability. This makes the concept much more general,
encompassing a wider range of examples.
*)

(* ========================================================================================================== )
( == The Master Definition == )
( ========================================================================================================== *)

AccessibleCategory ::= RegularCardinal "-ACCESSIBLE_CATEGORY" ;
TYPING
(*
* A category C is λ-accessible if it satisfies two conditions:
* 1. C has all λ-filtered colimits.
* 2. There exists a small SET S of λ-presentable objects such that every object in C
* is a λ-filtered colimit of objects from S. (This is weaker than generating under ALL colimits).
*)
Γ ⊢ C : Category, Γ ⊢ λ : REGULAR_CARDINAL
Premise1: C has all λ-FILTERED_COLIMITS
Premise2: ∃ S ⊆ Ob(C) s.t. (S is a SET) ∧ (∀ A∈S, A is λ-PRESENTABLE) ∧ (every object is a λ-filtered colimit of objects from S)
--------------------------------------------------------------------------------------------------------------------------------
Γ ⊢ C is a λ-ACCESSIBLE_CATEGORY ;
CATEGORY
[[ λ-ACCESSIBLE_CATEGORY ]] = "A category generated by a set of 'small' objects of size λ using only direct limits of size λ. This is a broad and important class of categories that includes all locally presentable categories, but also others that may lack some colimits. It represents a robust notion of being 'algebraic in spirit' without requiring full cocompleteness." ;

(* ========================================================================================================== )
( == The Relationship to Locally Presentable == )
( ========================================================================================================== *)

TheoremDeclaration ::= "THEOREM" "LocallyPresentableImpliesAccessible" ":"
"Every LOCALLY_PRESENTABLE_CATEGORY is an ACCESSIBLE category of the same rank." ;
TYPING
(Γ ⊢ C is LOCALLY λ-PRESENTABLE_CATEGORY) ==> (Γ ⊢ C is a λ-ACCESSIBLE_CATEGORY)
-------------------------------------------------------------------------------
Γ ⊢ THEOREM ... : MetaTheorem ;
CATEGORY
[[ THEOREM LocallyPresentableImpliesAccessible ]] = "The assertion that local presentability is a strictly stronger condition than accessibility. A locally presentable category is cocomplete, so it certainly has all λ-filtered colimits, and its generating set of λ-presentable objects is sufficient, thus satisfying the accessibility criteria. The converse is not true." ;
}

MetaDirectiveAnalysis ::= "(" "Elaborate on Section 5.4: Raising the degree of accessibility" ")" "==>" {
(*
ELABORATION: This section explores the relationship between different 'levels' of presentability and
accessibility. It answers the question: if a category is built from small pieces of size λ, what can we
say about its structure at a larger size κ? The main result is that these properties are upwardly stable:
a category built from λ-sized pieces can also be seen as being built from κ-sized pieces for any larger
regular cardinal κ.

A deep elaboration requires that we first formalize the key technical lemma that underpins this stability,
and then state the main theorems for both accessible and locally presentable categories.
*)

(* ========================================================================================================== )
( == Part 1: The Prerequisite Lemma - Presentability is Stable Upwards == )
( ========================================================================================================== *)

TheoremDeclaration ::= "THEOREM" "PresentabilityIsStableUpwards" ":"
"IF λ < κ are regular cardinals, THEN any λ-PRESENTABLE object is also κ-PRESENTABLE." ;
TYPING
(*
* This is the core technical result needed for this section. The proof rests on the following facts:
* 1. An object A is κ-presentable if Hom(A,-) preserves κ-filtered colimits.
* 2. If κ > λ, then any κ-filtered category is also a λ-filtered category.
* 3. Therefore, any κ-filtered colimit is also a λ-filtered colimit.
* 4. If A is λ-presentable, Hom(A,-) preserves ALL λ-filtered colimits.
* 5. Thus, Hom(A,-) must preserve the subset of them that are κ-filtered colimits.
* 6. Therefore, A is κ-presentable.
*)
Context: λ, κ are REGULAR_CARDINALs with λ < κ.
Premise1: Γ ⊢ A is λ-PRESENTABLE (i.e., Hom(A,-) preserves λ-filtered colimits)
Premise2: (D:J→C is κ-filtered colimit) ==> (D is λ-filtered colimit)
-------------------------------------------------------------------------------------------------
Conclusion: Hom(A,-) preserves κ-filtered colimits, which implies (Γ ⊢ A is κ-PRESENTABLE). ;
CATEGORY
[[ THEOREM PresentabilityIsStableUpwards ]] = "The assertion that the property of being a 'small' or 'compact' object is preserved as the notion of 'large' increases. This lemma is the engine that drives the stability results for accessible and locally presentable categories." ;

(* ========================================================================================================== )
( == Part 2: The Main Theorem for Accessible Categories == )
( ========================================================================================================== *)

TheoremDeclaration ::= "THEOREM" "RaisingTheDegreeOfAccessibility" ":"
"IF a category C is λ-ACCESSIBLE, THEN C is also κ-ACCESSIBLE for every regular cardinal κ > λ." ;
TYPING
(*
* This is the main theorem for accessible categories. It shows that accessibility is stable upwards.
* Proof Sketch:
* 1. Let C be λ-accessible. C is generated by a set S_λ of λ-presentable objects.
* 2. By the "PresentabilityIsStableUpwards" theorem, every object in S_λ is also κ-presentable.
* 3. A non-trivial result shows that the category C will also have all κ-filtered colimits.
* 4. A further result shows that the same set S_λ is sufficient to generate C using κ-filtered colimits.
* 5. Therefore, C satisfies the definition of a κ-accessible category.
*)
P1 := (Γ ⊢ C is a λ-ACCESSIBLE_CATEGORY)
P2 := (∀ (κ : REGULAR_CARDINAL, κ > λ), (Γ ⊢ C is a κ-ACCESSIBLE_CATEGORY))
---------------------------------------------------------------------------
(P1 ==> P2) : MetaTheorem ;
CATEGORY
[[ THEOREM RaisingTheDegreeOfAccessibility ]] = "A key stability result for accessible categories. It guarantees that if a category is constructible from λ-small pieces via λ-direct limits, it is also constructible from κ-small pieces via κ-direct limits for any larger scale κ. This shows that accessibility is a very robust property." ;

(* ========================================================================================================== )
( == Part 3: The Main Theorem for Locally Presentable Categories == )
( ========================================================================================================== *)

TheoremDeclaration ::= "THEOREM" "RaisingTheDegreeOfPresentability" ":"
"IF a category C is LOCALLY λ-PRESENTABLE, THEN C is also LOCALLY κ-PRESENTABLE for every regular cardinal κ > λ." ;
TYPING
(*
* This is the corresponding, stronger result for locally presentable categories.
* Proof sketch:
* 1. Let C be locally λ-presentable. By definition, C is cocomplete, so it has all κ-filtered colimits.
* 2. Let S_κ be the set of all κ-presentable objects in C. We need to show S_κ is a generating set.
* 3. The proof shows that every object in a locally λ-presentable category can be expressed
* as a κ-filtered colimit of κ-presentable objects, which satisfies the definition.
*)
P1 := (Γ ⊢ C is LOCALLY λ-PRESENTABLE_CATEGORY)
P2 := (∀ (κ : REGULAR_CARDINAL, κ > λ), (Γ ⊢ C is LOCALLY κ-PRESENTABLE_CATEGORY))
---------------------------------------------------------------------------------
(P1 ==> P2) : MetaTheorem ;
CATEGORY
[[ THEOREM RaisingTheDegreeOfPresentability ]] = "A fundamental stability result for the theory of locally presentable categories. It asserts that this 'well-behaved' property is stable upwards. It means that a category like Grp, which is locally finitely (ℵ₀-) presentable, is automatically locally ℵ₁-presentable, locally ℵ₂-presentable, and so on, confirming its robustness across all scales of construction." ;
}

MetaDirectiveAnalysis ::= "(" "Elaborate on Section 5.5: Functors with rank" ")" "==>" {
(*
ELABORATION: This section defines the "correct" notion of a structure-preserving map between accessible
or locally presentable categories. Such a functor must be "small" or "bounded" in a way that respects
the size-based structure of its domain. This property is called having a "rank." The main result connects
this idea back to the theory of adjoints, showing that right adjoints between these well-behaved categories
are automatically bounded in this way.
*)

(* ========================================================================================================== )
( == Part 1: The Definition of Rank == )
( ========================================================================================================== *)

FunctorProperty ::= Identifier "has" "RANK" RegularCardinal ;
TYPING
(*
* This is the core definition. A functor F has rank λ if it preserves λ-filtered colimits.
* This is precisely the condition required to test for λ-presentability, but now applied to the functor itself.
* It means the functor is "λ-continuous".
*)
Γ ⊢ F : Functor(C, D), Γ ⊢ λ : REGULAR_CARDINAL
-------------------------------------------------------------------------------
Γ ⊢ F has RANK λ <==> (F preserves λ-FILTERED_COLIMITS) ;
CATEGORY
[[ F has RANK λ ]] = "The property of a functor being 'continuous' with respect to structures of size λ. It ensures that the functor's behavior on a large, λ-directed system is determined by its behavior on the smaller components. A functor arising from a Lawvere theory (i.e., with finitary operations) has rank ℵ₀." ;

(* ========================================================================================================== )
( == Part 2: The Main Theorem (Adjoints Have Rank) == )
( ========================================================================================================== *)
(This theorem provides the main source of functors with rank.)

TheoremDeclaration ::= "THEOREM" "RightAdjointsBetweenLPCatsHaveRank" ":"
"IF F: C ⇆ D :G is an adjunction between LOCALLY λ-PRESENTABLE categories,"
"THEN the right adjoint G has a rank (specifically, rank λ)." ;
TYPING
Context: Γ ⊢ C, D are LOCALLY λ-PRESENTABLE_CATEGORY
Γ ⊢ F ⊣ G : Adjunction(C,D)
------------------------------------------------------
Conclusion: Γ ⊢ G has RANK λ : ProvableProposition ;
CATEGORY
[[ THEOREM RightAdjointsBetweenLPCatsHaveRank ]] = "A version of the Adjoint Functor Theorem tailored to the context of locally presentable categories. It asserts that any right adjoint between such well-behaved categories is automatically 'bounded' and respects the size-based structure of its domain. Dually, the left adjoint F preserves λ-presentable objects. This shows the deep compatibility between the theory of adjunctions and the theory of presentable categories." ;
}

MetaDirectiveAnalysis ::= "(" "Elaborate on Section 5.6: Sketches" ")" "==>" {
(*
ELABORATION: This section provides the ultimate "syntactic" characterization of locally presentable
categories. A "sketch" is a purely formal, graphical way to specify a theory—it's a category together with
a designated set of cones and cocones that are to be interpreted as limits and colimits. A "model" of a sketch
is a functor that realizes this specification. The main theorem establishes a profound equivalence: the categories
that are locally presentable (a semantic, object-based property) are precisely the categories of models of some sketch
(a syntactic, specification-based property).
*)

(* ========================================================================================================== )
( == Part 1: The Syntax - The Sketch == )
( ========================================================================================================== *)

SketchDeclaration ::= "SKETCH" Identifier "is" "{" "UnderlyingCategory" ":" Identifier "," "LimitCones" ":" {ConeDeclaration} "," "ColimitCocones" ":" {CoconeDeclaration} "}" ;
TYPING
(* A sketch is a category J equipped with two sets of diagrams that are marked for interpretation. *)
Γ ⊢ J : SmallCategory
Γ ⊢ Cones : Set of Cone(in J)
Γ ⊢ Cocones : Set of Cocone(in J)
-----------------------------------------------------------------------------------------------------
Γ ⊢ SKETCH S ... : Sketch_Type ;
CATEGORY
[[ SKETCH S ... ]] = "A syntactic specification of a categorical theory. It consists of a small category (the 'alphabet' of types and operations) and a collection of diagrams within it that are designated to become limits and colimits in any valid model. This provides a uniform language for specifying products, coproducts, equalizers, and other complex structures." ;

(* ========================================================================================================== )
( == Part 2: The Semantics - The Model == )
( ========================================================================================================== *)

ModelOfSketch ::= "MODEL_OF" SketchDeclaration "in" CategoryDeclaration ;
TYPING
(*
* A model of a sketch S in a category C is a functor F from the sketch's underlying category
* that turns every designated cone into a limit cone and every designated cocone into a colimit cone.
*)
Γ ⊢ S : Sketch_Type, Γ ⊢ C : Category
Γ ⊢ F : Functor(UnderlyingCategory(S), C)
Premise1: ∀ cone ∈ LimitCones(S), F(cone) is a LIMIT_CONE in C
Premise2: ∀ cocone ∈ ColimitCocones(S), F(cocone) is a COLIMIT_CONE in C
-------------------------------------------------------------------------------
Γ ⊢ MODEL_OF S in C : SketchModel_Type ;
CATEGORY
[[ MODEL_OF S in C ]] = "A semantic realization of the theory specified by the sketch S. The functor acts as an interpretation map, assigning concrete objects and morphisms in the target category C to the abstract symbols in the sketch, in a way that satisfies all the specified limit and colimit axioms." ;

CategoryOfSketchModels ::= "Mod" "(" SketchDeclaration "," CategoryDeclaration ")" ;
TYPING
(* The category of all models of a sketch S in C. *)
Γ ⊢ S : Sketch_Type, Γ ⊢ C : Category
Objects := { F | F is a MODEL_OF S in C }
Morphisms := { α : F₁ ⇒ F₂ | α is a NaturalTransformation }
---------------------------------------------------------------
Γ ⊢ Mod(S, C) : Category ;
CATEGORY
[[ Mod(S, C) ]] = "The category of all models of the sketch S in C. For example, if S is a sketch for the theory of categories, then Mod(S, Set) would be the category of all small categories." ;

(* ========================================================================================================== )
( == Part 3: The Main Characterization Theorem == )
( ========================================================================================================== *)

TheoremDeclaration ::= "THEOREM" "GabrielUlmerDuality" ":"
"A category C is LOCALLY_PRESENTABLE if and only if C is equivalent to the category of models of some sketch." ;
TYPING
P1 := (Γ ⊢ C is LOCALLY_PRESENTABLE_CATEGORY)
P2 := (∃ (S:Sketch_Type) s.t. C ≅ Mod(S, Set))
-------------------------------------------------
Γ ⊢ (P1 <==> P2) : ProvableEquivalence ;
CATEGORY
[[ THEOREM GabrielUlmerDuality ]] = "A profound characterization theorem that establishes a duality between the 'semantic' world of locally presentable categories and the 'syntactic' world of sketches. It asserts that any category with the nice semantic property of being built from small generators can be completely described by a finite amount of syntactic data (a sketch), and vice versa. This is a cornerstone of modern categorical logic and algebraic theory." ;
}


